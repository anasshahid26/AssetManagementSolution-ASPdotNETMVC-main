//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FAS.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MatrixFASEntities1 : DbContext
    {
        public MatrixFASEntities1()
            : base("name=MatrixFASEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Asset> Assets { get; set; }
        public virtual DbSet<AssetCompany> AssetCompanies { get; set; }
        public virtual DbSet<AssetDisposal> AssetDisposals { get; set; }
        public virtual DbSet<AssetLocation> AssetLocations { get; set; }
        public virtual DbSet<AssetPermission> AssetPermissions { get; set; }
        public virtual DbSet<AssetPurchase> AssetPurchases { get; set; }
        public virtual DbSet<AssetReverification> AssetReverifications { get; set; }
        public virtual DbSet<AssetRole> AssetRoles { get; set; }
        public virtual DbSet<AssetTagging> AssetTaggings { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<Currency> Currencies { get; set; }
        public virtual DbSet<DisposalNumber> DisposalNumbers { get; set; }
        public virtual DbSet<DisposalRemark> DisposalRemarks { get; set; }
        public virtual DbSet<GatePassTransaction> GatePassTransactions { get; set; }
        public virtual DbSet<L1Category> L1Category { get; set; }
        public virtual DbSet<L2Category> L2Category { get; set; }
        public virtual DbSet<L2Location> L2Location { get; set; }
        public virtual DbSet<L3Category> L3Category { get; set; }
        public virtual DbSet<L3Location> L3Location { get; set; }
        public virtual DbSet<L4Category> L4Category { get; set; }
        public virtual DbSet<L4Location> L4Location { get; set; }
        public virtual DbSet<L5Location> L5Location { get; set; }
        public virtual DbSet<PurchaseDetail> PurchaseDetails { get; set; }
        public virtual DbSet<Reconciliation> Reconciliations { get; set; }
        public virtual DbSet<ReconciliationRecord> ReconciliationRecords { get; set; }
        public virtual DbSet<RoomNumberDummy> RoomNumberDummies { get; set; }
        public virtual DbSet<Supplier> Suppliers { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<User_Activity> User_Activity { get; set; }
        public virtual DbSet<UserCompany> UserCompanies { get; set; }
        public virtual DbSet<UserRole> UserRoles { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<AssetDepreciation> AssetDepreciations { get; set; }
        public virtual DbSet<AssetBarcodeTest> AssetBarcodeTests { get; set; }
    
        public virtual ObjectResult<GetAssets_Result> GetAssets(string l1LocCode, string assetDescription, string assetNumber, string l1CatName, string l2CatName, string l2LocName, string l3LocName, string l4LocName, string cODELEVEL, string status)
        {
            var l1LocCodeParameter = l1LocCode != null ?
                new ObjectParameter("L1LocCode", l1LocCode) :
                new ObjectParameter("L1LocCode", typeof(string));
    
            var assetDescriptionParameter = assetDescription != null ?
                new ObjectParameter("AssetDescription", assetDescription) :
                new ObjectParameter("AssetDescription", typeof(string));
    
            var assetNumberParameter = assetNumber != null ?
                new ObjectParameter("AssetNumber", assetNumber) :
                new ObjectParameter("AssetNumber", typeof(string));
    
            var l1CatNameParameter = l1CatName != null ?
                new ObjectParameter("L1CatName", l1CatName) :
                new ObjectParameter("L1CatName", typeof(string));
    
            var l2CatNameParameter = l2CatName != null ?
                new ObjectParameter("L2CatName", l2CatName) :
                new ObjectParameter("L2CatName", typeof(string));
    
            var l2LocNameParameter = l2LocName != null ?
                new ObjectParameter("L2LocName", l2LocName) :
                new ObjectParameter("L2LocName", typeof(string));
    
            var l3LocNameParameter = l3LocName != null ?
                new ObjectParameter("L3LocName", l3LocName) :
                new ObjectParameter("L3LocName", typeof(string));
    
            var l4LocNameParameter = l4LocName != null ?
                new ObjectParameter("L4LocName", l4LocName) :
                new ObjectParameter("L4LocName", typeof(string));
    
            var cODELEVELParameter = cODELEVEL != null ?
                new ObjectParameter("CODELEVEL", cODELEVEL) :
                new ObjectParameter("CODELEVEL", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAssets_Result>("GetAssets", l1LocCodeParameter, assetDescriptionParameter, assetNumberParameter, l1CatNameParameter, l2CatNameParameter, l2LocNameParameter, l3LocNameParameter, l4LocNameParameter, cODELEVELParameter, statusParameter);
        }
    
        public virtual ObjectResult<GetAssetsWithPurchases_Result> GetAssetsWithPurchases(string l1LocCode, string assetDescription, string assetNumber, string l1CatName, string l2CatName, string l2LocName, string l3LocName, string l4LocName, string cODELEVEL, string status)
        {
            var l1LocCodeParameter = l1LocCode != null ?
                new ObjectParameter("L1LocCode", l1LocCode) :
                new ObjectParameter("L1LocCode", typeof(string));
    
            var assetDescriptionParameter = assetDescription != null ?
                new ObjectParameter("AssetDescription", assetDescription) :
                new ObjectParameter("AssetDescription", typeof(string));
    
            var assetNumberParameter = assetNumber != null ?
                new ObjectParameter("AssetNumber", assetNumber) :
                new ObjectParameter("AssetNumber", typeof(string));
    
            var l1CatNameParameter = l1CatName != null ?
                new ObjectParameter("L1CatName", l1CatName) :
                new ObjectParameter("L1CatName", typeof(string));
    
            var l2CatNameParameter = l2CatName != null ?
                new ObjectParameter("L2CatName", l2CatName) :
                new ObjectParameter("L2CatName", typeof(string));
    
            var l2LocNameParameter = l2LocName != null ?
                new ObjectParameter("L2LocName", l2LocName) :
                new ObjectParameter("L2LocName", typeof(string));
    
            var l3LocNameParameter = l3LocName != null ?
                new ObjectParameter("L3LocName", l3LocName) :
                new ObjectParameter("L3LocName", typeof(string));
    
            var l4LocNameParameter = l4LocName != null ?
                new ObjectParameter("L4LocName", l4LocName) :
                new ObjectParameter("L4LocName", typeof(string));
    
            var cODELEVELParameter = cODELEVEL != null ?
                new ObjectParameter("CODELEVEL", cODELEVEL) :
                new ObjectParameter("CODELEVEL", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAssetsWithPurchases_Result>("GetAssetsWithPurchases", l1LocCodeParameter, assetDescriptionParameter, assetNumberParameter, l1CatNameParameter, l2CatNameParameter, l2LocNameParameter, l3LocNameParameter, l4LocNameParameter, cODELEVELParameter, statusParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual ObjectResult<string> SP_SELECT_TABLE(string tABLE_NAME, string qUERY_TYPE)
        {
            var tABLE_NAMEParameter = tABLE_NAME != null ?
                new ObjectParameter("TABLE_NAME", tABLE_NAME) :
                new ObjectParameter("TABLE_NAME", typeof(string));
    
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_SELECT_TABLE", tABLE_NAMEParameter, qUERY_TYPEParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<USP_Asset_Result> USP_Asset(string uniqueID, string assetNumber, string l1CatCode, string l2CatCode, string l3CatCode, string l4CatCode, string l1LocCode, string l2LocCode, string l3LocCode, string l4LocCode, string l5LocCode, string assetDescription, string iTC1, string iTC2, string iTC3, string lOCCODEASSET, string rOOMTYPECODE, string cODELEVEL, string status, string disposedOn, string disposedBy, string verificationStatus, string dateOfVerification, string createdOn, string depreciated, string netBookValue, string brand, string color, string serialNumber, string size, string mode)
        {
            var uniqueIDParameter = uniqueID != null ?
                new ObjectParameter("UniqueID", uniqueID) :
                new ObjectParameter("UniqueID", typeof(string));
    
            var assetNumberParameter = assetNumber != null ?
                new ObjectParameter("AssetNumber", assetNumber) :
                new ObjectParameter("AssetNumber", typeof(string));
    
            var l1CatCodeParameter = l1CatCode != null ?
                new ObjectParameter("L1CatCode", l1CatCode) :
                new ObjectParameter("L1CatCode", typeof(string));
    
            var l2CatCodeParameter = l2CatCode != null ?
                new ObjectParameter("L2CatCode", l2CatCode) :
                new ObjectParameter("L2CatCode", typeof(string));
    
            var l3CatCodeParameter = l3CatCode != null ?
                new ObjectParameter("L3CatCode", l3CatCode) :
                new ObjectParameter("L3CatCode", typeof(string));
    
            var l4CatCodeParameter = l4CatCode != null ?
                new ObjectParameter("L4CatCode", l4CatCode) :
                new ObjectParameter("L4CatCode", typeof(string));
    
            var l1LocCodeParameter = l1LocCode != null ?
                new ObjectParameter("L1LocCode", l1LocCode) :
                new ObjectParameter("L1LocCode", typeof(string));
    
            var l2LocCodeParameter = l2LocCode != null ?
                new ObjectParameter("L2LocCode", l2LocCode) :
                new ObjectParameter("L2LocCode", typeof(string));
    
            var l3LocCodeParameter = l3LocCode != null ?
                new ObjectParameter("L3LocCode", l3LocCode) :
                new ObjectParameter("L3LocCode", typeof(string));
    
            var l4LocCodeParameter = l4LocCode != null ?
                new ObjectParameter("L4LocCode", l4LocCode) :
                new ObjectParameter("L4LocCode", typeof(string));
    
            var l5LocCodeParameter = l5LocCode != null ?
                new ObjectParameter("L5LocCode", l5LocCode) :
                new ObjectParameter("L5LocCode", typeof(string));
    
            var assetDescriptionParameter = assetDescription != null ?
                new ObjectParameter("AssetDescription", assetDescription) :
                new ObjectParameter("AssetDescription", typeof(string));
    
            var iTC1Parameter = iTC1 != null ?
                new ObjectParameter("ITC1", iTC1) :
                new ObjectParameter("ITC1", typeof(string));
    
            var iTC2Parameter = iTC2 != null ?
                new ObjectParameter("ITC2", iTC2) :
                new ObjectParameter("ITC2", typeof(string));
    
            var iTC3Parameter = iTC3 != null ?
                new ObjectParameter("ITC3", iTC3) :
                new ObjectParameter("ITC3", typeof(string));
    
            var lOCCODEASSETParameter = lOCCODEASSET != null ?
                new ObjectParameter("LOCCODEASSET", lOCCODEASSET) :
                new ObjectParameter("LOCCODEASSET", typeof(string));
    
            var rOOMTYPECODEParameter = rOOMTYPECODE != null ?
                new ObjectParameter("ROOMTYPECODE", rOOMTYPECODE) :
                new ObjectParameter("ROOMTYPECODE", typeof(string));
    
            var cODELEVELParameter = cODELEVEL != null ?
                new ObjectParameter("CODELEVEL", cODELEVEL) :
                new ObjectParameter("CODELEVEL", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var disposedOnParameter = disposedOn != null ?
                new ObjectParameter("DisposedOn", disposedOn) :
                new ObjectParameter("DisposedOn", typeof(string));
    
            var disposedByParameter = disposedBy != null ?
                new ObjectParameter("DisposedBy", disposedBy) :
                new ObjectParameter("DisposedBy", typeof(string));
    
            var verificationStatusParameter = verificationStatus != null ?
                new ObjectParameter("VerificationStatus", verificationStatus) :
                new ObjectParameter("VerificationStatus", typeof(string));
    
            var dateOfVerificationParameter = dateOfVerification != null ?
                new ObjectParameter("DateOfVerification", dateOfVerification) :
                new ObjectParameter("DateOfVerification", typeof(string));
    
            var createdOnParameter = createdOn != null ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(string));
    
            var depreciatedParameter = depreciated != null ?
                new ObjectParameter("Depreciated", depreciated) :
                new ObjectParameter("Depreciated", typeof(string));
    
            var netBookValueParameter = netBookValue != null ?
                new ObjectParameter("NetBookValue", netBookValue) :
                new ObjectParameter("NetBookValue", typeof(string));
    
            var brandParameter = brand != null ?
                new ObjectParameter("Brand", brand) :
                new ObjectParameter("Brand", typeof(string));
    
            var colorParameter = color != null ?
                new ObjectParameter("Color", color) :
                new ObjectParameter("Color", typeof(string));
    
            var serialNumberParameter = serialNumber != null ?
                new ObjectParameter("SerialNumber", serialNumber) :
                new ObjectParameter("SerialNumber", typeof(string));
    
            var sizeParameter = size != null ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(string));
    
            var modeParameter = mode != null ?
                new ObjectParameter("Mode", mode) :
                new ObjectParameter("Mode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_Asset_Result>("USP_Asset", uniqueIDParameter, assetNumberParameter, l1CatCodeParameter, l2CatCodeParameter, l3CatCodeParameter, l4CatCodeParameter, l1LocCodeParameter, l2LocCodeParameter, l3LocCodeParameter, l4LocCodeParameter, l5LocCodeParameter, assetDescriptionParameter, iTC1Parameter, iTC2Parameter, iTC3Parameter, lOCCODEASSETParameter, rOOMTYPECODEParameter, cODELEVELParameter, statusParameter, disposedOnParameter, disposedByParameter, verificationStatusParameter, dateOfVerificationParameter, createdOnParameter, depreciatedParameter, netBookValueParameter, brandParameter, colorParameter, serialNumberParameter, sizeParameter, modeParameter);
        }
    
        public virtual int USP_Reverify_Asset_By_RoomNo_Barcode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_Reverify_Asset_By_RoomNo_Barcode");
        }
    
        public virtual ObjectResult<string> USP_SELECT_TABLE(string tABLE_NAME, string qUERY_TYPE)
        {
            var tABLE_NAMEParameter = tABLE_NAME != null ?
                new ObjectParameter("TABLE_NAME", tABLE_NAME) :
                new ObjectParameter("TABLE_NAME", typeof(string));
    
            var qUERY_TYPEParameter = qUERY_TYPE != null ?
                new ObjectParameter("QUERY_TYPE", qUERY_TYPE) :
                new ObjectParameter("QUERY_TYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_SELECT_TABLE", tABLE_NAMEParameter, qUERY_TYPEParameter);
        }
    
        public virtual ObjectResult<GetAssetsTagging_Result> GetAssetsTagging(string l1LocCode, string l2Locname, string l3Locname)
        {
            var l1LocCodeParameter = l1LocCode != null ?
                new ObjectParameter("L1LocCode", l1LocCode) :
                new ObjectParameter("L1LocCode", typeof(string));
    
            var l2LocnameParameter = l2Locname != null ?
                new ObjectParameter("L2Locname", l2Locname) :
                new ObjectParameter("L2Locname", typeof(string));
    
            var l3LocnameParameter = l3Locname != null ?
                new ObjectParameter("L3Locname", l3Locname) :
                new ObjectParameter("L3Locname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAssetsTagging_Result>("GetAssetsTagging", l1LocCodeParameter, l2LocnameParameter, l3LocnameParameter);
        }
    }
}
