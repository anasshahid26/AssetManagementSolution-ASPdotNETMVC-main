#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FAS.Services.DataModel
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MatrixFAS_7_May_2018")]
	public partial class MatrixFASDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAsset(Asset instance);
    partial void UpdateAsset(Asset instance);
    partial void DeleteAsset(Asset instance);
    partial void InsertAssetPurchase(AssetPurchase instance);
    partial void UpdateAssetPurchase(AssetPurchase instance);
    partial void DeleteAssetPurchase(AssetPurchase instance);
    partial void InsertSupplier(Supplier instance);
    partial void UpdateSupplier(Supplier instance);
    partial void DeleteSupplier(Supplier instance);
    partial void InsertL1Category(L1Category instance);
    partial void UpdateL1Category(L1Category instance);
    partial void DeleteL1Category(L1Category instance);
    partial void InsertPurchaseDetail(PurchaseDetail instance);
    partial void UpdatePurchaseDetail(PurchaseDetail instance);
    partial void DeletePurchaseDetail(PurchaseDetail instance);
    partial void InsertCurrency(Currency instance);
    partial void UpdateCurrency(Currency instance);
    partial void DeleteCurrency(Currency instance);
    partial void InsertL2Category(L2Category instance);
    partial void UpdateL2Category(L2Category instance);
    partial void DeleteL2Category(L2Category instance);
    partial void InsertAssetLocation(AssetLocation instance);
    partial void UpdateAssetLocation(AssetLocation instance);
    partial void DeleteAssetLocation(AssetLocation instance);
    #endregion
		
		public MatrixFASDataContext() : 
				base(global::FAS.Services.Properties.Settings.Default.MatrixFAS_7_May_2018ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MatrixFASDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MatrixFASDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MatrixFASDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MatrixFASDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Asset> Assets
		{
			get
			{
				return this.GetTable<Asset>();
			}
		}
		
		public System.Data.Linq.Table<AssetPurchase> AssetPurchases
		{
			get
			{
				return this.GetTable<AssetPurchase>();
			}
		}
		
		public System.Data.Linq.Table<Supplier> Suppliers
		{
			get
			{
				return this.GetTable<Supplier>();
			}
		}
		
		public System.Data.Linq.Table<L1Category> L1Categories
		{
			get
			{
				return this.GetTable<L1Category>();
			}
		}
		
		public System.Data.Linq.Table<PurchaseDetail> PurchaseDetails
		{
			get
			{
				return this.GetTable<PurchaseDetail>();
			}
		}
		
		public System.Data.Linq.Table<Currency> Currencies
		{
			get
			{
				return this.GetTable<Currency>();
			}
		}
		
		public System.Data.Linq.Table<L2Category> L2Categories
		{
			get
			{
				return this.GetTable<L2Category>();
			}
		}
		
		public System.Data.Linq.Table<AssetLocation> AssetLocations
		{
			get
			{
				return this.GetTable<AssetLocation>();
			}
		}

        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.GetAssets")]
        public ISingleResult<GetAssetsResult> GetAssets([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "L1LocCode", DbType = "VarChar(50)")] string l1LocCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "AssetDescription", DbType = "VarChar(50)")] string assetDescription, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "AssetNumber", DbType = "VarChar(50)")] string assetNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "L1CatName", DbType = "VarChar(50)")] string l1CatName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "L2CatName", DbType = "VarChar(50)")] string l2CatName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "L2LocName", DbType = "VarChar(50)")] string l2LocName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "L3LocName", DbType = "VarChar(50)")] string l3LocName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "L4LocName", DbType = "VarChar(50)")] string l4LocName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "CODELEVEL", DbType = "VarChar(50)")] string cODELEVEL, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "Status", DbType = "VarChar(50)")] string status)
        {
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), l1LocCode, assetDescription, assetNumber, l1CatName, l2CatName, l2LocName, l3LocName, l4LocName, cODELEVEL, status);
            return ((ISingleResult<GetAssetsResult>)(result.ReturnValue));
        }


        [global::System.Data.Linq.Mapping.FunctionAttribute(Name = "dbo.GetAssetsTagging")]
        public ISingleResult<GetAssetsResult> GetAssets([global::System.Data.Linq.Mapping.ParameterAttribute(Name = "L1LocCode", DbType = "VarChar(50)")] string L1LocCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "L2Locname", DbType = "VarChar(50)")] string L2Locname, [global::System.Data.Linq.Mapping.ParameterAttribute(Name = "L3Locname", DbType = "VarChar(50)")] string L3Locname)
		{
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), L1LocCode, L2Locname, L3Locname);
			return ((ISingleResult<GetAssetsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAssetsWithPurchases")]
		public ISingleResult<GetAssetsWithPurchasesResult> GetAssetsWithPurchases([global::System.Data.Linq.Mapping.ParameterAttribute(Name="L1LocCode", DbType="VarChar(50)")] string l1LocCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssetDescription", DbType="VarChar(50)")] string assetDescription, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AssetNumber", DbType="VarChar(50)")] string assetNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="L1CatName", DbType="VarChar(50)")] string l1CatName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="L2CatName", DbType="VarChar(50)")] string l2CatName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="L2LocName", DbType="VarChar(50)")] string l2LocName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="L3LocName", DbType="VarChar(50)")] string l3LocName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="L4LocName", DbType="VarChar(50)")] string l4LocName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CODELEVEL", DbType="VarChar(50)")] string cODELEVEL, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="VarChar(50)")] string status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), l1LocCode, assetDescription, assetNumber, l1CatName, l2CatName, l2LocName, l3LocName, l4LocName, cODELEVEL, status);
			return ((ISingleResult<GetAssetsWithPurchasesResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Asset")]
	public partial class Asset : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UniqueID;
		
		private string _AssetNumber;
		
		private string _AssetDescription;
		
		private string _L1CatCode;
		
		private string _L2CatCode;
		
		private string _L3CatCode;
		
		private string _L4CatCode;
		
		private string _L1LocCode;
		
		private string _L2LocCode;
		
		private string _L3LocCode;
		
		private string _L4LocCode;
		
		private string _L5LocCode;
		
		private string _ITC1;
		
		private string _ITC2;
		
		private string _ITC3;
		
		private string _LOCCODEASSET;
		
		private string _ROOMTYPECODE;
		
		private string _CODELEVEL;
		
		private string _Status;
		
		private string _Brand;
		
		private string _SerialNumber;
		
		private string _Size;
		
		private string _Color;
		
		private string _DisposedOn;
		
		private string _VerificationStatus;
		
		private string _DateOfVerification;
		
		private string _CreatedOn;
		
		private string _Depreciated;
		
		private string _NetBookValue;
		
		private EntitySet<AssetPurchase> _AssetPurchases;
		
		private EntityRef<L1Category> _L1Category;
		
		private EntityRef<L2Category> _L2Category;
		
		private EntityRef<AssetLocation> _AssetLocation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(string value);
    partial void OnUniqueIDChanged();
    partial void OnAssetNumberChanging(string value);
    partial void OnAssetNumberChanged();
    partial void OnAssetDescriptionChanging(string value);
    partial void OnAssetDescriptionChanged();
    partial void OnL1CatCodeChanging(string value);
    partial void OnL1CatCodeChanged();
    partial void OnL2CatCodeChanging(string value);
    partial void OnL2CatCodeChanged();
    partial void OnL3CatCodeChanging(string value);
    partial void OnL3CatCodeChanged();
    partial void OnL4CatCodeChanging(string value);
    partial void OnL4CatCodeChanged();
    partial void OnL1LocCodeChanging(string value);
    partial void OnL1LocCodeChanged();
    partial void OnL2LocCodeChanging(string value);
    partial void OnL2LocCodeChanged();
    partial void OnL3LocCodeChanging(string value);
    partial void OnL3LocCodeChanged();
    partial void OnL4LocCodeChanging(string value);
    partial void OnL4LocCodeChanged();
    partial void OnL5LocCodeChanging(string value);
    partial void OnL5LocCodeChanged();
    partial void OnITC1Changing(string value);
    partial void OnITC1Changed();
    partial void OnITC2Changing(string value);
    partial void OnITC2Changed();
    partial void OnITC3Changing(string value);
    partial void OnITC3Changed();
    partial void OnLOCCODEASSETChanging(string value);
    partial void OnLOCCODEASSETChanged();
    partial void OnROOMTYPECODEChanging(string value);
    partial void OnROOMTYPECODEChanged();
    partial void OnCODELEVELChanging(string value);
    partial void OnCODELEVELChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    partial void OnSerialNumberChanging(string value);
    partial void OnSerialNumberChanged();
    partial void OnSizeChanging(string value);
    partial void OnSizeChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnDisposedOnChanging(string value);
    partial void OnDisposedOnChanged();
    partial void OnVerificationStatusChanging(string value);
    partial void OnVerificationStatusChanged();
    partial void OnDateOfVerificationChanging(string value);
    partial void OnDateOfVerificationChanged();
    partial void OnCreatedOnChanging(string value);
    partial void OnCreatedOnChanged();
    partial void OnDepreciatedChanging(string value);
    partial void OnDepreciatedChanged();
    partial void OnNetBookValueChanging(string value);
    partial void OnNetBookValueChanged();
    #endregion
		
		public Asset()
		{
			this._AssetPurchases = new EntitySet<AssetPurchase>(new Action<AssetPurchase>(this.attach_AssetPurchases), new Action<AssetPurchase>(this.detach_AssetPurchases));
			this._L1Category = default(EntityRef<L1Category>);
			this._L2Category = default(EntityRef<L2Category>);
			this._AssetLocation = default(EntityRef<AssetLocation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetNumber", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string AssetNumber
		{
			get
			{
				return this._AssetNumber;
			}
			set
			{
				if ((this._AssetNumber != value))
				{
					this.OnAssetNumberChanging(value);
					this.SendPropertyChanging();
					this._AssetNumber = value;
					this.SendPropertyChanged("AssetNumber");
					this.OnAssetNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetDescription", DbType="VarChar(255)")]
		public string AssetDescription
		{
			get
			{
				return this._AssetDescription;
			}
			set
			{
				if ((this._AssetDescription != value))
				{
					this.OnAssetDescriptionChanging(value);
					this.SendPropertyChanging();
					this._AssetDescription = value;
					this.SendPropertyChanged("AssetDescription");
					this.OnAssetDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L1CatCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string L1CatCode
		{
			get
			{
				return this._L1CatCode;
			}
			set
			{
				if ((this._L1CatCode != value))
				{
					if (this._L1Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnL1CatCodeChanging(value);
					this.SendPropertyChanging();
					this._L1CatCode = value;
					this.SendPropertyChanged("L1CatCode");
					this.OnL1CatCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L2CatCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string L2CatCode
		{
			get
			{
				return this._L2CatCode;
			}
			set
			{
				if ((this._L2CatCode != value))
				{
					if (this._L2Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnL2CatCodeChanging(value);
					this.SendPropertyChanging();
					this._L2CatCode = value;
					this.SendPropertyChanged("L2CatCode");
					this.OnL2CatCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L3CatCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string L3CatCode
		{
			get
			{
				return this._L3CatCode;
			}
			set
			{
				if ((this._L3CatCode != value))
				{
					this.OnL3CatCodeChanging(value);
					this.SendPropertyChanging();
					this._L3CatCode = value;
					this.SendPropertyChanged("L3CatCode");
					this.OnL3CatCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L4CatCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string L4CatCode
		{
			get
			{
				return this._L4CatCode;
			}
			set
			{
				if ((this._L4CatCode != value))
				{
					this.OnL4CatCodeChanging(value);
					this.SendPropertyChanging();
					this._L4CatCode = value;
					this.SendPropertyChanged("L4CatCode");
					this.OnL4CatCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L1LocCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string L1LocCode
		{
			get
			{
				return this._L1LocCode;
			}
			set
			{
				if ((this._L1LocCode != value))
				{
					if (this._AssetLocation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnL1LocCodeChanging(value);
					this.SendPropertyChanging();
					this._L1LocCode = value;
					this.SendPropertyChanged("L1LocCode");
					this.OnL1LocCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L2LocCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string L2LocCode
		{
			get
			{
				return this._L2LocCode;
			}
			set
			{
				if ((this._L2LocCode != value))
				{
					this.OnL2LocCodeChanging(value);
					this.SendPropertyChanging();
					this._L2LocCode = value;
					this.SendPropertyChanged("L2LocCode");
					this.OnL2LocCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L3LocCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string L3LocCode
		{
			get
			{
				return this._L3LocCode;
			}
			set
			{
				if ((this._L3LocCode != value))
				{
					this.OnL3LocCodeChanging(value);
					this.SendPropertyChanging();
					this._L3LocCode = value;
					this.SendPropertyChanged("L3LocCode");
					this.OnL3LocCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L4LocCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string L4LocCode
		{
			get
			{
				return this._L4LocCode;
			}
			set
			{
				if ((this._L4LocCode != value))
				{
					this.OnL4LocCodeChanging(value);
					this.SendPropertyChanging();
					this._L4LocCode = value;
					this.SendPropertyChanged("L4LocCode");
					this.OnL4LocCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L5LocCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string L5LocCode
		{
			get
			{
				return this._L5LocCode;
			}
			set
			{
				if ((this._L5LocCode != value))
				{
					this.OnL5LocCodeChanging(value);
					this.SendPropertyChanging();
					this._L5LocCode = value;
					this.SendPropertyChanged("L5LocCode");
					this.OnL5LocCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ITC1", DbType="VarChar(50)")]
		public string ITC1
		{
			get
			{
				return this._ITC1;
			}
			set
			{
				if ((this._ITC1 != value))
				{
					this.OnITC1Changing(value);
					this.SendPropertyChanging();
					this._ITC1 = value;
					this.SendPropertyChanged("ITC1");
					this.OnITC1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ITC2", DbType="VarChar(50)")]
		public string ITC2
		{
			get
			{
				return this._ITC2;
			}
			set
			{
				if ((this._ITC2 != value))
				{
					this.OnITC2Changing(value);
					this.SendPropertyChanging();
					this._ITC2 = value;
					this.SendPropertyChanged("ITC2");
					this.OnITC2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ITC3", DbType="VarChar(50)")]
		public string ITC3
		{
			get
			{
				return this._ITC3;
			}
			set
			{
				if ((this._ITC3 != value))
				{
					this.OnITC3Changing(value);
					this.SendPropertyChanging();
					this._ITC3 = value;
					this.SendPropertyChanged("ITC3");
					this.OnITC3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOCCODEASSET", DbType="VarChar(50)")]
		public string LOCCODEASSET
		{
			get
			{
				return this._LOCCODEASSET;
			}
			set
			{
				if ((this._LOCCODEASSET != value))
				{
					this.OnLOCCODEASSETChanging(value);
					this.SendPropertyChanging();
					this._LOCCODEASSET = value;
					this.SendPropertyChanged("LOCCODEASSET");
					this.OnLOCCODEASSETChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROOMTYPECODE", DbType="VarChar(50)")]
		public string ROOMTYPECODE
		{
			get
			{
				return this._ROOMTYPECODE;
			}
			set
			{
				if ((this._ROOMTYPECODE != value))
				{
					this.OnROOMTYPECODEChanging(value);
					this.SendPropertyChanging();
					this._ROOMTYPECODE = value;
					this.SendPropertyChanged("ROOMTYPECODE");
					this.OnROOMTYPECODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODELEVEL", DbType="VarChar(50)")]
		public string CODELEVEL
		{
			get
			{
				return this._CODELEVEL;
			}
			set
			{
				if ((this._CODELEVEL != value))
				{
					this.OnCODELEVELChanging(value);
					this.SendPropertyChanging();
					this._CODELEVEL = value;
					this.SendPropertyChanged("CODELEVEL");
					this.OnCODELEVELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="VarChar(50)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this.OnBrandChanging(value);
					this.SendPropertyChanging();
					this._Brand = value;
					this.SendPropertyChanged("Brand");
					this.OnBrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="VarChar(50)")]
		public string SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this.OnSerialNumberChanging(value);
					this.SendPropertyChanging();
					this._SerialNumber = value;
					this.SendPropertyChanged("SerialNumber");
					this.OnSerialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="VarChar(50)")]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="VarChar(50)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisposedOn", DbType="VarChar(50)")]
		public string DisposedOn
		{
			get
			{
				return this._DisposedOn;
			}
			set
			{
				if ((this._DisposedOn != value))
				{
					this.OnDisposedOnChanging(value);
					this.SendPropertyChanging();
					this._DisposedOn = value;
					this.SendPropertyChanged("DisposedOn");
					this.OnDisposedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerificationStatus", DbType="VarChar(50)")]
		public string VerificationStatus
		{
			get
			{
				return this._VerificationStatus;
			}
			set
			{
				if ((this._VerificationStatus != value))
				{
					this.OnVerificationStatusChanging(value);
					this.SendPropertyChanging();
					this._VerificationStatus = value;
					this.SendPropertyChanged("VerificationStatus");
					this.OnVerificationStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfVerification", DbType="VarChar(50)")]
		public string DateOfVerification
		{
			get
			{
				return this._DateOfVerification;
			}
			set
			{
				if ((this._DateOfVerification != value))
				{
					this.OnDateOfVerificationChanging(value);
					this.SendPropertyChanging();
					this._DateOfVerification = value;
					this.SendPropertyChanged("DateOfVerification");
					this.OnDateOfVerificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="VarChar(50)")]
		public string CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Depreciated", DbType="VarChar(50)")]
		public string Depreciated
		{
			get
			{
				return this._Depreciated;
			}
			set
			{
				if ((this._Depreciated != value))
				{
					this.OnDepreciatedChanging(value);
					this.SendPropertyChanging();
					this._Depreciated = value;
					this.SendPropertyChanged("Depreciated");
					this.OnDepreciatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetBookValue", DbType="VarChar(50)")]
		public string NetBookValue
		{
			get
			{
				return this._NetBookValue;
			}
			set
			{
				if ((this._NetBookValue != value))
				{
					this.OnNetBookValueChanging(value);
					this.SendPropertyChanging();
					this._NetBookValue = value;
					this.SendPropertyChanged("NetBookValue");
					this.OnNetBookValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Asset_AssetPurchase", Storage="_AssetPurchases", ThisKey="UniqueID", OtherKey="UniqueID")]
		public EntitySet<AssetPurchase> AssetPurchases
		{
			get
			{
				return this._AssetPurchases;
			}
			set
			{
				this._AssetPurchases.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="L1Category_Asset", Storage="_L1Category", ThisKey="L1CatCode", OtherKey="L1CatCode", IsForeignKey=true)]
		public L1Category L1Category
		{
			get
			{
				return this._L1Category.Entity;
			}
			set
			{
				L1Category previousValue = this._L1Category.Entity;
				if (((previousValue != value) 
							|| (this._L1Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._L1Category.Entity = null;
						previousValue.Assets.Remove(this);
					}
					this._L1Category.Entity = value;
					if ((value != null))
					{
						value.Assets.Add(this);
						this._L1CatCode = value.L1CatCode;
					}
					else
					{
						this._L1CatCode = default(string);
					}
					this.SendPropertyChanged("L1Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="L2Category_Asset", Storage="_L2Category", ThisKey="L2CatCode", OtherKey="L2CatCode", IsForeignKey=true)]
		public L2Category L2Category
		{
			get
			{
				return this._L2Category.Entity;
			}
			set
			{
				L2Category previousValue = this._L2Category.Entity;
				if (((previousValue != value) 
							|| (this._L2Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._L2Category.Entity = null;
						previousValue.Assets.Remove(this);
					}
					this._L2Category.Entity = value;
					if ((value != null))
					{
						value.Assets.Add(this);
						this._L2CatCode = value.L2CatCode;
					}
					else
					{
						this._L2CatCode = default(string);
					}
					this.SendPropertyChanged("L2Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssetLocation_Asset", Storage="_AssetLocation", ThisKey="L1LocCode", OtherKey="L1LocCode", IsForeignKey=true)]
		public AssetLocation AssetLocation
		{
			get
			{
				return this._AssetLocation.Entity;
			}
			set
			{
				AssetLocation previousValue = this._AssetLocation.Entity;
				if (((previousValue != value) 
							|| (this._AssetLocation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AssetLocation.Entity = null;
						previousValue.Assets.Remove(this);
					}
					this._AssetLocation.Entity = value;
					if ((value != null))
					{
						value.Assets.Add(this);
						this._L1LocCode = value.L1LocCode;
					}
					else
					{
						this._L1LocCode = default(string);
					}
					this.SendPropertyChanged("AssetLocation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AssetPurchases(AssetPurchase entity)
		{
			this.SendPropertyChanging();
			entity.Asset = this;
		}
		
		private void detach_AssetPurchases(AssetPurchase entity)
		{
			this.SendPropertyChanging();
			entity.Asset = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AssetPurchase")]
	public partial class AssetPurchase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AssetPurchase1;
		
		private string _UniqueID;
		
		private string _PurchaseID;
		
		private string _L1LocCode;
		
		private EntityRef<Asset> _Asset;
		
		private EntityRef<PurchaseDetail> _PurchaseDetail;
		
		private EntityRef<AssetLocation> _AssetLocation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAssetPurchase1Changing(string value);
    partial void OnAssetPurchase1Changed();
    partial void OnUniqueIDChanging(string value);
    partial void OnUniqueIDChanged();
    partial void OnPurchaseIDChanging(string value);
    partial void OnPurchaseIDChanged();
    partial void OnL1LocCodeChanging(string value);
    partial void OnL1LocCodeChanged();
    #endregion
		
		public AssetPurchase()
		{
			this._Asset = default(EntityRef<Asset>);
			this._PurchaseDetail = default(EntityRef<PurchaseDetail>);
			this._AssetLocation = default(EntityRef<AssetLocation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="AssetPurchase", Storage="_AssetPurchase1", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AssetPurchase1
		{
			get
			{
				return this._AssetPurchase1;
			}
			set
			{
				if ((this._AssetPurchase1 != value))
				{
					this.OnAssetPurchase1Changing(value);
					this.SendPropertyChanging();
					this._AssetPurchase1 = value;
					this.SendPropertyChanged("AssetPurchase1");
					this.OnAssetPurchase1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					if (this._Asset.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PurchaseID
		{
			get
			{
				return this._PurchaseID;
			}
			set
			{
				if ((this._PurchaseID != value))
				{
					if (this._PurchaseDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPurchaseIDChanging(value);
					this.SendPropertyChanging();
					this._PurchaseID = value;
					this.SendPropertyChanged("PurchaseID");
					this.OnPurchaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L1LocCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string L1LocCode
		{
			get
			{
				return this._L1LocCode;
			}
			set
			{
				if ((this._L1LocCode != value))
				{
					if (this._AssetLocation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnL1LocCodeChanging(value);
					this.SendPropertyChanging();
					this._L1LocCode = value;
					this.SendPropertyChanged("L1LocCode");
					this.OnL1LocCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Asset_AssetPurchase", Storage="_Asset", ThisKey="UniqueID", OtherKey="UniqueID", IsForeignKey=true)]
		public Asset Asset
		{
			get
			{
				return this._Asset.Entity;
			}
			set
			{
				Asset previousValue = this._Asset.Entity;
				if (((previousValue != value) 
							|| (this._Asset.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Asset.Entity = null;
						previousValue.AssetPurchases.Remove(this);
					}
					this._Asset.Entity = value;
					if ((value != null))
					{
						value.AssetPurchases.Add(this);
						this._UniqueID = value.UniqueID;
					}
					else
					{
						this._UniqueID = default(string);
					}
					this.SendPropertyChanged("Asset");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseDetail_AssetPurchase", Storage="_PurchaseDetail", ThisKey="PurchaseID", OtherKey="PurchaseID", IsForeignKey=true)]
		public PurchaseDetail PurchaseDetail
		{
			get
			{
				return this._PurchaseDetail.Entity;
			}
			set
			{
				PurchaseDetail previousValue = this._PurchaseDetail.Entity;
				if (((previousValue != value) 
							|| (this._PurchaseDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PurchaseDetail.Entity = null;
						previousValue.AssetPurchases.Remove(this);
					}
					this._PurchaseDetail.Entity = value;
					if ((value != null))
					{
						value.AssetPurchases.Add(this);
						this._PurchaseID = value.PurchaseID;
					}
					else
					{
						this._PurchaseID = default(string);
					}
					this.SendPropertyChanged("PurchaseDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssetLocation_AssetPurchase", Storage="_AssetLocation", ThisKey="L1LocCode", OtherKey="L1LocCode", IsForeignKey=true)]
		public AssetLocation AssetLocation
		{
			get
			{
				return this._AssetLocation.Entity;
			}
			set
			{
				AssetLocation previousValue = this._AssetLocation.Entity;
				if (((previousValue != value) 
							|| (this._AssetLocation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AssetLocation.Entity = null;
						previousValue.AssetPurchases.Remove(this);
					}
					this._AssetLocation.Entity = value;
					if ((value != null))
					{
						value.AssetPurchases.Add(this);
						this._L1LocCode = value.L1LocCode;
					}
					else
					{
						this._L1LocCode = default(string);
					}
					this.SendPropertyChanged("AssetLocation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Supplier")]
	public partial class Supplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SupplierID;
		
		private string _SupplierName;
		
		private string _SupplierAddress;
		
		private string _SupplierTelephone;
		
		private string _SupplierEmail;
		
		private System.Nullable<int> _CountryID;
		
		private int _CompanyID;
		
		private EntitySet<PurchaseDetail> _PurchaseDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSupplierIDChanging(string value);
    partial void OnSupplierIDChanged();
    partial void OnSupplierNameChanging(string value);
    partial void OnSupplierNameChanged();
    partial void OnSupplierAddressChanging(string value);
    partial void OnSupplierAddressChanged();
    partial void OnSupplierTelephoneChanging(string value);
    partial void OnSupplierTelephoneChanged();
    partial void OnSupplierEmailChanging(string value);
    partial void OnSupplierEmailChanged();
    partial void OnCountryIDChanging(System.Nullable<int> value);
    partial void OnCountryIDChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    #endregion
		
		public Supplier()
		{
			this._PurchaseDetails = new EntitySet<PurchaseDetail>(new Action<PurchaseDetail>(this.attach_PurchaseDetails), new Action<PurchaseDetail>(this.detach_PurchaseDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this.OnSupplierNameChanging(value);
					this.SendPropertyChanging();
					this._SupplierName = value;
					this.SendPropertyChanged("SupplierName");
					this.OnSupplierNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierAddress", DbType="VarChar(200)")]
		public string SupplierAddress
		{
			get
			{
				return this._SupplierAddress;
			}
			set
			{
				if ((this._SupplierAddress != value))
				{
					this.OnSupplierAddressChanging(value);
					this.SendPropertyChanging();
					this._SupplierAddress = value;
					this.SendPropertyChanged("SupplierAddress");
					this.OnSupplierAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierTelephone", DbType="VarChar(50)")]
		public string SupplierTelephone
		{
			get
			{
				return this._SupplierTelephone;
			}
			set
			{
				if ((this._SupplierTelephone != value))
				{
					this.OnSupplierTelephoneChanging(value);
					this.SendPropertyChanging();
					this._SupplierTelephone = value;
					this.SendPropertyChanged("SupplierTelephone");
					this.OnSupplierTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierEmail", DbType="VarChar(100)")]
		public string SupplierEmail
		{
			get
			{
				return this._SupplierEmail;
			}
			set
			{
				if ((this._SupplierEmail != value))
				{
					this.OnSupplierEmailChanging(value);
					this.SendPropertyChanging();
					this._SupplierEmail = value;
					this.SendPropertyChanged("SupplierEmail");
					this.OnSupplierEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int")]
		public System.Nullable<int> CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_PurchaseDetail", Storage="_PurchaseDetails", ThisKey="SupplierID", OtherKey="SupplierID")]
		public EntitySet<PurchaseDetail> PurchaseDetails
		{
			get
			{
				return this._PurchaseDetails;
			}
			set
			{
				this._PurchaseDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PurchaseDetails(PurchaseDetail entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_PurchaseDetails(PurchaseDetail entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.L1Category")]
	public partial class L1Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _L1CatCode;
		
		private string _L1LocCode;
		
		private string _L1CatName;
		
		private System.Nullable<int> _DepreciationRate;
		
		private EntitySet<Asset> _Assets;
		
		private EntitySet<L2Category> _L2Categories;
		
		private EntityRef<AssetLocation> _AssetLocation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnL1CatCodeChanging(string value);
    partial void OnL1CatCodeChanged();
    partial void OnL1LocCodeChanging(string value);
    partial void OnL1LocCodeChanged();
    partial void OnL1CatNameChanging(string value);
    partial void OnL1CatNameChanged();
    partial void OnDepreciationRateChanging(System.Nullable<int> value);
    partial void OnDepreciationRateChanged();
    #endregion
		
		public L1Category()
		{
			this._Assets = new EntitySet<Asset>(new Action<Asset>(this.attach_Assets), new Action<Asset>(this.detach_Assets));
			this._L2Categories = new EntitySet<L2Category>(new Action<L2Category>(this.attach_L2Categories), new Action<L2Category>(this.detach_L2Categories));
			this._AssetLocation = default(EntityRef<AssetLocation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L1CatCode", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string L1CatCode
		{
			get
			{
				return this._L1CatCode;
			}
			set
			{
				if ((this._L1CatCode != value))
				{
					this.OnL1CatCodeChanging(value);
					this.SendPropertyChanging();
					this._L1CatCode = value;
					this.SendPropertyChanged("L1CatCode");
					this.OnL1CatCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L1LocCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string L1LocCode
		{
			get
			{
				return this._L1LocCode;
			}
			set
			{
				if ((this._L1LocCode != value))
				{
					if (this._AssetLocation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnL1LocCodeChanging(value);
					this.SendPropertyChanging();
					this._L1LocCode = value;
					this.SendPropertyChanged("L1LocCode");
					this.OnL1LocCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L1CatName", DbType="VarChar(50)")]
		public string L1CatName
		{
			get
			{
				return this._L1CatName;
			}
			set
			{
				if ((this._L1CatName != value))
				{
					this.OnL1CatNameChanging(value);
					this.SendPropertyChanging();
					this._L1CatName = value;
					this.SendPropertyChanged("L1CatName");
					this.OnL1CatNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepreciationRate", DbType="Int")]
		public System.Nullable<int> DepreciationRate
		{
			get
			{
				return this._DepreciationRate;
			}
			set
			{
				if ((this._DepreciationRate != value))
				{
					this.OnDepreciationRateChanging(value);
					this.SendPropertyChanging();
					this._DepreciationRate = value;
					this.SendPropertyChanged("DepreciationRate");
					this.OnDepreciationRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="L1Category_Asset", Storage="_Assets", ThisKey="L1CatCode", OtherKey="L1CatCode")]
		public EntitySet<Asset> Assets
		{
			get
			{
				return this._Assets;
			}
			set
			{
				this._Assets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="L1Category_L2Category", Storage="_L2Categories", ThisKey="L1CatCode", OtherKey="L1CatCode")]
		public EntitySet<L2Category> L2Categories
		{
			get
			{
				return this._L2Categories;
			}
			set
			{
				this._L2Categories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssetLocation_L1Category", Storage="_AssetLocation", ThisKey="L1LocCode", OtherKey="L1LocCode", IsForeignKey=true)]
		public AssetLocation AssetLocation
		{
			get
			{
				return this._AssetLocation.Entity;
			}
			set
			{
				AssetLocation previousValue = this._AssetLocation.Entity;
				if (((previousValue != value) 
							|| (this._AssetLocation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AssetLocation.Entity = null;
						previousValue.L1Categories.Remove(this);
					}
					this._AssetLocation.Entity = value;
					if ((value != null))
					{
						value.L1Categories.Add(this);
						this._L1LocCode = value.L1LocCode;
					}
					else
					{
						this._L1LocCode = default(string);
					}
					this.SendPropertyChanged("AssetLocation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Assets(Asset entity)
		{
			this.SendPropertyChanging();
			entity.L1Category = this;
		}
		
		private void detach_Assets(Asset entity)
		{
			this.SendPropertyChanging();
			entity.L1Category = null;
		}
		
		private void attach_L2Categories(L2Category entity)
		{
			this.SendPropertyChanging();
			entity.L1Category = this;
		}
		
		private void detach_L2Categories(L2Category entity)
		{
			this.SendPropertyChanging();
			entity.L1Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PurchaseDetail")]
	public partial class PurchaseDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PurchaseID;
		
		private string _SupplierID;
		
		private string _L1LocCode;
		
		private string _InvoiceNumber;
		
		private System.Nullable<System.DateTime> _DateofPurchase;
		
		private string _PONumber;
		
		private System.Nullable<System.DateTime> _DateofPO;
		
		private string _iso;
		
		private string _UnitPrice;
		
		private string _InvoiceImage;
		
		private string _PurchaseOrderImage;
		
		private string _NetbookValue;
		
		private EntitySet<AssetPurchase> _AssetPurchases;
		
		private EntityRef<Supplier> _Supplier;
		
		private EntityRef<Currency> _Currency;
		
		private EntityRef<AssetLocation> _AssetLocation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPurchaseIDChanging(string value);
    partial void OnPurchaseIDChanged();
    partial void OnSupplierIDChanging(string value);
    partial void OnSupplierIDChanged();
    partial void OnL1LocCodeChanging(string value);
    partial void OnL1LocCodeChanged();
    partial void OnInvoiceNumberChanging(string value);
    partial void OnInvoiceNumberChanged();
    partial void OnDateofPurchaseChanging(System.Nullable<System.DateTime> value);
    partial void OnDateofPurchaseChanged();
    partial void OnPONumberChanging(string value);
    partial void OnPONumberChanged();
    partial void OnDateofPOChanging(System.Nullable<System.DateTime> value);
    partial void OnDateofPOChanged();
    partial void OnisoChanging(string value);
    partial void OnisoChanged();
    partial void OnUnitPriceChanging(string value);
    partial void OnUnitPriceChanged();
    partial void OnInvoiceImageChanging(string value);
    partial void OnInvoiceImageChanged();
    partial void OnPurchaseOrderImageChanging(string value);
    partial void OnPurchaseOrderImageChanged();
    partial void OnNetbookValueChanging(string value);
    partial void OnNetbookValueChanged();
    #endregion
		
		public PurchaseDetail()
		{
			this._AssetPurchases = new EntitySet<AssetPurchase>(new Action<AssetPurchase>(this.attach_AssetPurchases), new Action<AssetPurchase>(this.detach_AssetPurchases));
			this._Supplier = default(EntityRef<Supplier>);
			this._Currency = default(EntityRef<Currency>);
			this._AssetLocation = default(EntityRef<AssetLocation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PurchaseID
		{
			get
			{
				return this._PurchaseID;
			}
			set
			{
				if ((this._PurchaseID != value))
				{
					this.OnPurchaseIDChanging(value);
					this.SendPropertyChanging();
					this._PurchaseID = value;
					this.SendPropertyChanged("PurchaseID");
					this.OnPurchaseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L1LocCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string L1LocCode
		{
			get
			{
				return this._L1LocCode;
			}
			set
			{
				if ((this._L1LocCode != value))
				{
					if (this._AssetLocation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnL1LocCodeChanging(value);
					this.SendPropertyChanging();
					this._L1LocCode = value;
					this.SendPropertyChanged("L1LocCode");
					this.OnL1LocCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNumber", DbType="VarChar(50)")]
		public string InvoiceNumber
		{
			get
			{
				return this._InvoiceNumber;
			}
			set
			{
				if ((this._InvoiceNumber != value))
				{
					this.OnInvoiceNumberChanging(value);
					this.SendPropertyChanging();
					this._InvoiceNumber = value;
					this.SendPropertyChanged("InvoiceNumber");
					this.OnInvoiceNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateofPurchase", DbType="Date")]
		public System.Nullable<System.DateTime> DateofPurchase
		{
			get
			{
				return this._DateofPurchase;
			}
			set
			{
				if ((this._DateofPurchase != value))
				{
					this.OnDateofPurchaseChanging(value);
					this.SendPropertyChanging();
					this._DateofPurchase = value;
					this.SendPropertyChanged("DateofPurchase");
					this.OnDateofPurchaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PONumber", DbType="VarChar(50)")]
		public string PONumber
		{
			get
			{
				return this._PONumber;
			}
			set
			{
				if ((this._PONumber != value))
				{
					this.OnPONumberChanging(value);
					this.SendPropertyChanging();
					this._PONumber = value;
					this.SendPropertyChanged("PONumber");
					this.OnPONumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateofPO", DbType="Date")]
		public System.Nullable<System.DateTime> DateofPO
		{
			get
			{
				return this._DateofPO;
			}
			set
			{
				if ((this._DateofPO != value))
				{
					this.OnDateofPOChanging(value);
					this.SendPropertyChanging();
					this._DateofPO = value;
					this.SendPropertyChanged("DateofPO");
					this.OnDateofPOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iso", DbType="Char(3)")]
		public string iso
		{
			get
			{
				return this._iso;
			}
			set
			{
				if ((this._iso != value))
				{
					if (this._Currency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnisoChanging(value);
					this.SendPropertyChanging();
					this._iso = value;
					this.SendPropertyChanged("iso");
					this.OnisoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="VarChar(200)")]
		public string UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceImage", DbType="VarChar(100)")]
		public string InvoiceImage
		{
			get
			{
				return this._InvoiceImage;
			}
			set
			{
				if ((this._InvoiceImage != value))
				{
					this.OnInvoiceImageChanging(value);
					this.SendPropertyChanging();
					this._InvoiceImage = value;
					this.SendPropertyChanged("InvoiceImage");
					this.OnInvoiceImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PurchaseOrderImage", DbType="VarChar(100)")]
		public string PurchaseOrderImage
		{
			get
			{
				return this._PurchaseOrderImage;
			}
			set
			{
				if ((this._PurchaseOrderImage != value))
				{
					this.OnPurchaseOrderImageChanging(value);
					this.SendPropertyChanging();
					this._PurchaseOrderImage = value;
					this.SendPropertyChanged("PurchaseOrderImage");
					this.OnPurchaseOrderImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetbookValue", DbType="VarChar(50)")]
		public string NetbookValue
		{
			get
			{
				return this._NetbookValue;
			}
			set
			{
				if ((this._NetbookValue != value))
				{
					this.OnNetbookValueChanging(value);
					this.SendPropertyChanging();
					this._NetbookValue = value;
					this.SendPropertyChanged("NetbookValue");
					this.OnNetbookValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PurchaseDetail_AssetPurchase", Storage="_AssetPurchases", ThisKey="PurchaseID", OtherKey="PurchaseID")]
		public EntitySet<AssetPurchase> AssetPurchases
		{
			get
			{
				return this._AssetPurchases;
			}
			set
			{
				this._AssetPurchases.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_PurchaseDetail", Storage="_Supplier", ThisKey="SupplierID", OtherKey="SupplierID", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.PurchaseDetails.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.PurchaseDetails.Add(this);
						this._SupplierID = value.SupplierID;
					}
					else
					{
						this._SupplierID = default(string);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_PurchaseDetail", Storage="_Currency", ThisKey="iso", OtherKey="iso", IsForeignKey=true)]
		public Currency Currency
		{
			get
			{
				return this._Currency.Entity;
			}
			set
			{
				Currency previousValue = this._Currency.Entity;
				if (((previousValue != value) 
							|| (this._Currency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Currency.Entity = null;
						previousValue.PurchaseDetails.Remove(this);
					}
					this._Currency.Entity = value;
					if ((value != null))
					{
						value.PurchaseDetails.Add(this);
						this._iso = value.iso;
					}
					else
					{
						this._iso = default(string);
					}
					this.SendPropertyChanged("Currency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssetLocation_PurchaseDetail", Storage="_AssetLocation", ThisKey="L1LocCode", OtherKey="L1LocCode", IsForeignKey=true)]
		public AssetLocation AssetLocation
		{
			get
			{
				return this._AssetLocation.Entity;
			}
			set
			{
				AssetLocation previousValue = this._AssetLocation.Entity;
				if (((previousValue != value) 
							|| (this._AssetLocation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AssetLocation.Entity = null;
						previousValue.PurchaseDetails.Remove(this);
					}
					this._AssetLocation.Entity = value;
					if ((value != null))
					{
						value.PurchaseDetails.Add(this);
						this._L1LocCode = value.L1LocCode;
					}
					else
					{
						this._L1LocCode = default(string);
					}
					this.SendPropertyChanged("AssetLocation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AssetPurchases(AssetPurchase entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseDetail = this;
		}
		
		private void detach_AssetPurchases(AssetPurchase entity)
		{
			this.SendPropertyChanging();
			entity.PurchaseDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Currency")]
	public partial class Currency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _iso;
		
		private string _name;
		
		private EntitySet<PurchaseDetail> _PurchaseDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnisoChanging(string value);
    partial void OnisoChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public Currency()
		{
			this._PurchaseDetails = new EntitySet<PurchaseDetail>(new Action<PurchaseDetail>(this.attach_PurchaseDetails), new Action<PurchaseDetail>(this.detach_PurchaseDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iso", DbType="Char(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string iso
		{
			get
			{
				return this._iso;
			}
			set
			{
				if ((this._iso != value))
				{
					this.OnisoChanging(value);
					this.SendPropertyChanging();
					this._iso = value;
					this.SendPropertyChanged("iso");
					this.OnisoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Currency_PurchaseDetail", Storage="_PurchaseDetails", ThisKey="iso", OtherKey="iso")]
		public EntitySet<PurchaseDetail> PurchaseDetails
		{
			get
			{
				return this._PurchaseDetails;
			}
			set
			{
				this._PurchaseDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PurchaseDetails(PurchaseDetail entity)
		{
			this.SendPropertyChanging();
			entity.Currency = this;
		}
		
		private void detach_PurchaseDetails(PurchaseDetail entity)
		{
			this.SendPropertyChanging();
			entity.Currency = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.L2Category")]
	public partial class L2Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _L2CatCode;
		
		private string _L1LocCode;
		
		private string _L1CatCode;
		
		private string _ITC1;
		
		private string _L2CatName;
		
		private EntitySet<Asset> _Assets;
		
		private EntityRef<L1Category> _L1Category;
		
		private EntityRef<AssetLocation> _AssetLocation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnL2CatCodeChanging(string value);
    partial void OnL2CatCodeChanged();
    partial void OnL1LocCodeChanging(string value);
    partial void OnL1LocCodeChanged();
    partial void OnL1CatCodeChanging(string value);
    partial void OnL1CatCodeChanged();
    partial void OnITC1Changing(string value);
    partial void OnITC1Changed();
    partial void OnL2CatNameChanging(string value);
    partial void OnL2CatNameChanged();
    #endregion
		
		public L2Category()
		{
			this._Assets = new EntitySet<Asset>(new Action<Asset>(this.attach_Assets), new Action<Asset>(this.detach_Assets));
			this._L1Category = default(EntityRef<L1Category>);
			this._AssetLocation = default(EntityRef<AssetLocation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L2CatCode", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string L2CatCode
		{
			get
			{
				return this._L2CatCode;
			}
			set
			{
				if ((this._L2CatCode != value))
				{
					this.OnL2CatCodeChanging(value);
					this.SendPropertyChanging();
					this._L2CatCode = value;
					this.SendPropertyChanged("L2CatCode");
					this.OnL2CatCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L1LocCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string L1LocCode
		{
			get
			{
				return this._L1LocCode;
			}
			set
			{
				if ((this._L1LocCode != value))
				{
					if (this._AssetLocation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnL1LocCodeChanging(value);
					this.SendPropertyChanging();
					this._L1LocCode = value;
					this.SendPropertyChanged("L1LocCode");
					this.OnL1LocCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L1CatCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string L1CatCode
		{
			get
			{
				return this._L1CatCode;
			}
			set
			{
				if ((this._L1CatCode != value))
				{
					if (this._L1Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnL1CatCodeChanging(value);
					this.SendPropertyChanging();
					this._L1CatCode = value;
					this.SendPropertyChanged("L1CatCode");
					this.OnL1CatCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ITC1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ITC1
		{
			get
			{
				return this._ITC1;
			}
			set
			{
				if ((this._ITC1 != value))
				{
					this.OnITC1Changing(value);
					this.SendPropertyChanging();
					this._ITC1 = value;
					this.SendPropertyChanged("ITC1");
					this.OnITC1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L2CatName", DbType="VarChar(50)")]
		public string L2CatName
		{
			get
			{
				return this._L2CatName;
			}
			set
			{
				if ((this._L2CatName != value))
				{
					this.OnL2CatNameChanging(value);
					this.SendPropertyChanging();
					this._L2CatName = value;
					this.SendPropertyChanged("L2CatName");
					this.OnL2CatNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="L2Category_Asset", Storage="_Assets", ThisKey="L2CatCode", OtherKey="L2CatCode")]
		public EntitySet<Asset> Assets
		{
			get
			{
				return this._Assets;
			}
			set
			{
				this._Assets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="L1Category_L2Category", Storage="_L1Category", ThisKey="L1CatCode", OtherKey="L1CatCode", IsForeignKey=true)]
		public L1Category L1Category
		{
			get
			{
				return this._L1Category.Entity;
			}
			set
			{
				L1Category previousValue = this._L1Category.Entity;
				if (((previousValue != value) 
							|| (this._L1Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._L1Category.Entity = null;
						previousValue.L2Categories.Remove(this);
					}
					this._L1Category.Entity = value;
					if ((value != null))
					{
						value.L2Categories.Add(this);
						this._L1CatCode = value.L1CatCode;
					}
					else
					{
						this._L1CatCode = default(string);
					}
					this.SendPropertyChanged("L1Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssetLocation_L2Category", Storage="_AssetLocation", ThisKey="L1LocCode", OtherKey="L1LocCode", IsForeignKey=true)]
		public AssetLocation AssetLocation
		{
			get
			{
				return this._AssetLocation.Entity;
			}
			set
			{
				AssetLocation previousValue = this._AssetLocation.Entity;
				if (((previousValue != value) 
							|| (this._AssetLocation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AssetLocation.Entity = null;
						previousValue.L2Categories.Remove(this);
					}
					this._AssetLocation.Entity = value;
					if ((value != null))
					{
						value.L2Categories.Add(this);
						this._L1LocCode = value.L1LocCode;
					}
					else
					{
						this._L1LocCode = default(string);
					}
					this.SendPropertyChanged("AssetLocation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Assets(Asset entity)
		{
			this.SendPropertyChanging();
			entity.L2Category = this;
		}
		
		private void detach_Assets(Asset entity)
		{
			this.SendPropertyChanging();
			entity.L2Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AssetLocations")]
	public partial class AssetLocation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _L1LocCode;
		
		private int _CompanyID;
		
		private string _L1LocName;
		
		private string _Address;
		
		private string _Address2;
		
		private string _Address3;
		
		private string _City;
		
		private string _State_Province;
		
		private string _Zip_PostalCode;
		
		private string _Country;
		
		private string _ContactName;
		
		private string _ContactPhone;
		
		private string _ContactFax;
		
		private string _ContactEmail;
		
		private string _Logo;
		
		private bool _Active;
		
		private System.Nullable<System.DateTime> _CreatedOn;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _ModifiedOn;
		
		private string _ModifiedBy;
		
		private string _MachineCreated;
		
		private string _AssetDisposal;
		
		private string _AssetMovement;
		
		private int _CountryID;
		
		private EntitySet<Asset> _Assets;
		
		private EntitySet<AssetPurchase> _AssetPurchases;
		
		private EntitySet<L1Category> _L1Categories;
		
		private EntitySet<PurchaseDetail> _PurchaseDetails;
		
		private EntitySet<L2Category> _L2Categories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnL1LocCodeChanging(string value);
    partial void OnL1LocCodeChanged();
    partial void OnCompanyIDChanging(int value);
    partial void OnCompanyIDChanged();
    partial void OnL1LocNameChanging(string value);
    partial void OnL1LocNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnAddress3Changing(string value);
    partial void OnAddress3Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnState_ProvinceChanging(string value);
    partial void OnState_ProvinceChanged();
    partial void OnZip_PostalCodeChanging(string value);
    partial void OnZip_PostalCodeChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnContactPhoneChanging(string value);
    partial void OnContactPhoneChanged();
    partial void OnContactFaxChanging(string value);
    partial void OnContactFaxChanged();
    partial void OnContactEmailChanging(string value);
    partial void OnContactEmailChanged();
    partial void OnLogoChanging(string value);
    partial void OnLogoChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnCreatedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnModifiedOnChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedOnChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnMachineCreatedChanging(string value);
    partial void OnMachineCreatedChanged();
    partial void OnAssetDisposalChanging(string value);
    partial void OnAssetDisposalChanged();
    partial void OnAssetMovementChanging(string value);
    partial void OnAssetMovementChanged();
    partial void OnCountryIDChanging(int value);
    partial void OnCountryIDChanged();
    #endregion
		
		public AssetLocation()
		{
			this._Assets = new EntitySet<Asset>(new Action<Asset>(this.attach_Assets), new Action<Asset>(this.detach_Assets));
			this._AssetPurchases = new EntitySet<AssetPurchase>(new Action<AssetPurchase>(this.attach_AssetPurchases), new Action<AssetPurchase>(this.detach_AssetPurchases));
			this._L1Categories = new EntitySet<L1Category>(new Action<L1Category>(this.attach_L1Categories), new Action<L1Category>(this.detach_L1Categories));
			this._PurchaseDetails = new EntitySet<PurchaseDetail>(new Action<PurchaseDetail>(this.attach_PurchaseDetails), new Action<PurchaseDetail>(this.detach_PurchaseDetails));
			this._L2Categories = new EntitySet<L2Category>(new Action<L2Category>(this.attach_L2Categories), new Action<L2Category>(this.detach_L2Categories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L1LocCode", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string L1LocCode
		{
			get
			{
				return this._L1LocCode;
			}
			set
			{
				if ((this._L1LocCode != value))
				{
					this.OnL1LocCodeChanging(value);
					this.SendPropertyChanging();
					this._L1LocCode = value;
					this.SendPropertyChanged("L1LocCode");
					this.OnL1LocCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="Int NOT NULL")]
		public int CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L1LocName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string L1LocName
		{
			get
			{
				return this._L1LocName;
			}
			set
			{
				if ((this._L1LocName != value))
				{
					this.OnL1LocNameChanging(value);
					this.SendPropertyChanging();
					this._L1LocName = value;
					this.SendPropertyChanged("L1LocName");
					this.OnL1LocNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="VarChar(50)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address3", DbType="VarChar(50)")]
		public string Address3
		{
			get
			{
				return this._Address3;
			}
			set
			{
				if ((this._Address3 != value))
				{
					this.OnAddress3Changing(value);
					this.SendPropertyChanging();
					this._Address3 = value;
					this.SendPropertyChanged("Address3");
					this.OnAddress3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State_Province", DbType="VarChar(50)")]
		public string State_Province
		{
			get
			{
				return this._State_Province;
			}
			set
			{
				if ((this._State_Province != value))
				{
					this.OnState_ProvinceChanging(value);
					this.SendPropertyChanging();
					this._State_Province = value;
					this.SendPropertyChanged("State_Province");
					this.OnState_ProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip_PostalCode", DbType="VarChar(50)")]
		public string Zip_PostalCode
		{
			get
			{
				return this._Zip_PostalCode;
			}
			set
			{
				if ((this._Zip_PostalCode != value))
				{
					this.OnZip_PostalCodeChanging(value);
					this.SendPropertyChanging();
					this._Zip_PostalCode = value;
					this.SendPropertyChanged("Zip_PostalCode");
					this.OnZip_PostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="VarChar(50)")]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPhone", DbType="VarChar(50)")]
		public string ContactPhone
		{
			get
			{
				return this._ContactPhone;
			}
			set
			{
				if ((this._ContactPhone != value))
				{
					this.OnContactPhoneChanging(value);
					this.SendPropertyChanging();
					this._ContactPhone = value;
					this.SendPropertyChanged("ContactPhone");
					this.OnContactPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactFax", DbType="VarChar(50)")]
		public string ContactFax
		{
			get
			{
				return this._ContactFax;
			}
			set
			{
				if ((this._ContactFax != value))
				{
					this.OnContactFaxChanging(value);
					this.SendPropertyChanging();
					this._ContactFax = value;
					this.SendPropertyChanged("ContactFax");
					this.OnContactFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactEmail", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactEmail
		{
			get
			{
				return this._ContactEmail;
			}
			set
			{
				if ((this._ContactEmail != value))
				{
					this.OnContactEmailChanging(value);
					this.SendPropertyChanging();
					this._ContactEmail = value;
					this.SendPropertyChanged("ContactEmail");
					this.OnContactEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="VarChar(MAX)")]
		public string Logo
		{
			get
			{
				return this._Logo;
			}
			set
			{
				if ((this._Logo != value))
				{
					this.OnLogoChanging(value);
					this.SendPropertyChanging();
					this._Logo = value;
					this.SendPropertyChanged("Logo");
					this.OnLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="VarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="VarChar(50)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineCreated", DbType="VarChar(50)")]
		public string MachineCreated
		{
			get
			{
				return this._MachineCreated;
			}
			set
			{
				if ((this._MachineCreated != value))
				{
					this.OnMachineCreatedChanging(value);
					this.SendPropertyChanging();
					this._MachineCreated = value;
					this.SendPropertyChanged("MachineCreated");
					this.OnMachineCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetDisposal", DbType="VarChar(50)")]
		public string AssetDisposal
		{
			get
			{
				return this._AssetDisposal;
			}
			set
			{
				if ((this._AssetDisposal != value))
				{
					this.OnAssetDisposalChanging(value);
					this.SendPropertyChanging();
					this._AssetDisposal = value;
					this.SendPropertyChanged("AssetDisposal");
					this.OnAssetDisposalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetMovement", DbType="VarChar(50)")]
		public string AssetMovement
		{
			get
			{
				return this._AssetMovement;
			}
			set
			{
				if ((this._AssetMovement != value))
				{
					this.OnAssetMovementChanging(value);
					this.SendPropertyChanging();
					this._AssetMovement = value;
					this.SendPropertyChanged("AssetMovement");
					this.OnAssetMovementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int NOT NULL")]
		public int CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssetLocation_Asset", Storage="_Assets", ThisKey="L1LocCode", OtherKey="L1LocCode")]
		public EntitySet<Asset> Assets
		{
			get
			{
				return this._Assets;
			}
			set
			{
				this._Assets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssetLocation_AssetPurchase", Storage="_AssetPurchases", ThisKey="L1LocCode", OtherKey="L1LocCode")]
		public EntitySet<AssetPurchase> AssetPurchases
		{
			get
			{
				return this._AssetPurchases;
			}
			set
			{
				this._AssetPurchases.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssetLocation_L1Category", Storage="_L1Categories", ThisKey="L1LocCode", OtherKey="L1LocCode")]
		public EntitySet<L1Category> L1Categories
		{
			get
			{
				return this._L1Categories;
			}
			set
			{
				this._L1Categories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssetLocation_PurchaseDetail", Storage="_PurchaseDetails", ThisKey="L1LocCode", OtherKey="L1LocCode")]
		public EntitySet<PurchaseDetail> PurchaseDetails
		{
			get
			{
				return this._PurchaseDetails;
			}
			set
			{
				this._PurchaseDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssetLocation_L2Category", Storage="_L2Categories", ThisKey="L1LocCode", OtherKey="L1LocCode")]
		public EntitySet<L2Category> L2Categories
		{
			get
			{
				return this._L2Categories;
			}
			set
			{
				this._L2Categories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Assets(Asset entity)
		{
			this.SendPropertyChanging();
			entity.AssetLocation = this;
		}
		
		private void detach_Assets(Asset entity)
		{
			this.SendPropertyChanging();
			entity.AssetLocation = null;
		}
		
		private void attach_AssetPurchases(AssetPurchase entity)
		{
			this.SendPropertyChanging();
			entity.AssetLocation = this;
		}
		
		private void detach_AssetPurchases(AssetPurchase entity)
		{
			this.SendPropertyChanging();
			entity.AssetLocation = null;
		}
		
		private void attach_L1Categories(L1Category entity)
		{
			this.SendPropertyChanging();
			entity.AssetLocation = this;
		}
		
		private void detach_L1Categories(L1Category entity)
		{
			this.SendPropertyChanging();
			entity.AssetLocation = null;
		}
		
		private void attach_PurchaseDetails(PurchaseDetail entity)
		{
			this.SendPropertyChanging();
			entity.AssetLocation = this;
		}
		
		private void detach_PurchaseDetails(PurchaseDetail entity)
		{
			this.SendPropertyChanging();
			entity.AssetLocation = null;
		}
		
		private void attach_L2Categories(L2Category entity)
		{
			this.SendPropertyChanging();
			entity.AssetLocation = this;
		}
		
		private void detach_L2Categories(L2Category entity)
		{
			this.SendPropertyChanging();
			entity.AssetLocation = null;
		}
	}
	
	public partial class GetAssetsResult
	{
        private int _TID;
		private string _AssetNumber;
		
		private string _AssetDescription;
		
		private string _L1CatName;
		
		private string _L2CatName;
		
		private string _L3CatCode;
		
		private string _L1LocName;
		
		private string _L2LocName;
		
		private string _L3LocName;
		
		private string _L4LocName;
		
		private string _L5LocName;
		
		private string _Status;
		
		private string _Brand;
		
		private string _SerialNumber;
		
		private string _Size;
		
		private string _Color;
		
		private string _DisposedOn;
		
		private string _VerificationStatus;
		
		private string _DateOfVerification;
		
		private string _Depreciated;
		
		private string _NetBookValue;
		
		public GetAssetsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetNumber", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string AssetNumber
		{
			get
			{
				return this._AssetNumber;
			}
			set
			{
				if ((this._AssetNumber != value))
				{
					this._AssetNumber = value;
				}
			}
		}
        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_TID", DbType = "numeric NOT NULL", CanBeNull = false)]
        public int TID
        {
            get
            {
                return this._TID;
            }
            set
            {
                if ((this._TID != value))
                {
                    this._TID = value;
                }
            }
        }
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetDescription", DbType="VarChar(255)")]
		public string AssetDescription
		{
			get
			{
				return this._AssetDescription;
			}
			set
			{
				if ((this._AssetDescription != value))
				{
					this._AssetDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L1CatName", DbType="VarChar(50)")]
		public string L1CatName
		{
			get
			{
				return this._L1CatName;
			}
			set
			{
				if ((this._L1CatName != value))
				{
					this._L1CatName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L2CatName", DbType="VarChar(50)")]
		public string L2CatName
		{
			get
			{
				return this._L2CatName;
			}
			set
			{
				if ((this._L2CatName != value))
				{
					this._L2CatName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L3CatCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string L3CatCode
		{
			get
			{
				return this._L3CatCode;
			}
			set
			{
				if ((this._L3CatCode != value))
				{
					this._L3CatCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L1LocName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string L1LocName
		{
			get
			{
				return this._L1LocName;
			}
			set
			{
				if ((this._L1LocName != value))
				{
					this._L1LocName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L2LocName", DbType="VarChar(50)")]
		public string L2LocName
		{
			get
			{
				return this._L2LocName;
			}
			set
			{
				if ((this._L2LocName != value))
				{
					this._L2LocName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L3LocName", DbType="VarChar(50)")]
		public string L3LocName
		{
			get
			{
				return this._L3LocName;
			}
			set
			{
				if ((this._L3LocName != value))
				{
					this._L3LocName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L4LocName", DbType="VarChar(50)")]
		public string L4LocName
		{
			get
			{
				return this._L4LocName;
			}
			set
			{
				if ((this._L4LocName != value))
				{
					this._L4LocName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L5LocName", DbType="VarChar(50)")]
		public string L5LocName
		{
			get
			{
				return this._L5LocName;
			}
			set
			{
				if ((this._L5LocName != value))
				{
					this._L5LocName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="VarChar(50)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this._Brand = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="VarChar(50)")]
		public string SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this._SerialNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="VarChar(50)")]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this._Size = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="VarChar(50)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this._Color = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisposedOn", DbType="VarChar(50)")]
		public string DisposedOn
		{
			get
			{
				return this._DisposedOn;
			}
			set
			{
				if ((this._DisposedOn != value))
				{
					this._DisposedOn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerificationStatus", DbType="VarChar(50)")]
		public string VerificationStatus
		{
			get
			{
				return this._VerificationStatus;
			}
			set
			{
				if ((this._VerificationStatus != value))
				{
					this._VerificationStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfVerification", DbType="VarChar(50)")]
		public string DateOfVerification
		{
			get
			{
				return this._DateOfVerification;
			}
			set
			{
				if ((this._DateOfVerification != value))
				{
					this._DateOfVerification = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Depreciated", DbType="VarChar(50)")]
		public string Depreciated
		{
			get
			{
				return this._Depreciated;
			}
			set
			{
				if ((this._Depreciated != value))
				{
					this._Depreciated = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetBookValue", DbType="VarChar(50)")]
		public string NetBookValue
		{
			get
			{
				return this._NetBookValue;
			}
			set
			{
				if ((this._NetBookValue != value))
				{
					this._NetBookValue = value;
				}
			}
		}
	}
	
	public partial class GetAssetsWithPurchasesResult
	{
		
		private string _AssetNumber;
		
		private string _AssetDescription;
		
		private string _L1CatName;
		
		private string _L2CatName;
		
		private string _L3CatCode;
		
		private string _L1LocName;
		
		private string _L2LocName;
		
		private string _L3LocName;
		
		private string _L4LocName;
		
		private string _L5LocName;
		
		private string _Status;
		
		private string _Brand;
		
		private string _SerialNumber;
		
		private string _Size;
		
		private string _Color;
		
		private string _DisposedOn;
		
		private string _VerificationStatus;
		
		private string _DateOfVerification;
		
		private string _Depreciated;
		
		private string _NetBookValue;
		
		private System.Nullable<System.DateTime> _DateofPurchase;
		
		private string _UnitPrice;
		
		public GetAssetsWithPurchasesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetNumber", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string AssetNumber
		{
			get
			{
				return this._AssetNumber;
			}
			set
			{
				if ((this._AssetNumber != value))
				{
					this._AssetNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetDescription", DbType="VarChar(255)")]
		public string AssetDescription
		{
			get
			{
				return this._AssetDescription;
			}
			set
			{
				if ((this._AssetDescription != value))
				{
					this._AssetDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L1CatName", DbType="VarChar(50)")]
		public string L1CatName
		{
			get
			{
				return this._L1CatName;
			}
			set
			{
				if ((this._L1CatName != value))
				{
					this._L1CatName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L2CatName", DbType="VarChar(50)")]
		public string L2CatName
		{
			get
			{
				return this._L2CatName;
			}
			set
			{
				if ((this._L2CatName != value))
				{
					this._L2CatName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L3CatCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string L3CatCode
		{
			get
			{
				return this._L3CatCode;
			}
			set
			{
				if ((this._L3CatCode != value))
				{
					this._L3CatCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L1LocName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string L1LocName
		{
			get
			{
				return this._L1LocName;
			}
			set
			{
				if ((this._L1LocName != value))
				{
					this._L1LocName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L2LocName", DbType="VarChar(50)")]
		public string L2LocName
		{
			get
			{
				return this._L2LocName;
			}
			set
			{
				if ((this._L2LocName != value))
				{
					this._L2LocName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L3LocName", DbType="VarChar(50)")]
		public string L3LocName
		{
			get
			{
				return this._L3LocName;
			}
			set
			{
				if ((this._L3LocName != value))
				{
					this._L3LocName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L4LocName", DbType="VarChar(50)")]
		public string L4LocName
		{
			get
			{
				return this._L4LocName;
			}
			set
			{
				if ((this._L4LocName != value))
				{
					this._L4LocName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L5LocName", DbType="VarChar(50)")]
		public string L5LocName
		{
			get
			{
				return this._L5LocName;
			}
			set
			{
				if ((this._L5LocName != value))
				{
					this._L5LocName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="VarChar(50)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this._Brand = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SerialNumber", DbType="VarChar(50)")]
		public string SerialNumber
		{
			get
			{
				return this._SerialNumber;
			}
			set
			{
				if ((this._SerialNumber != value))
				{
					this._SerialNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="VarChar(50)")]
		public string Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this._Size = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="VarChar(50)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this._Color = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisposedOn", DbType="VarChar(50)")]
		public string DisposedOn
		{
			get
			{
				return this._DisposedOn;
			}
			set
			{
				if ((this._DisposedOn != value))
				{
					this._DisposedOn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VerificationStatus", DbType="VarChar(50)")]
		public string VerificationStatus
		{
			get
			{
				return this._VerificationStatus;
			}
			set
			{
				if ((this._VerificationStatus != value))
				{
					this._VerificationStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfVerification", DbType="VarChar(50)")]
		public string DateOfVerification
		{
			get
			{
				return this._DateOfVerification;
			}
			set
			{
				if ((this._DateOfVerification != value))
				{
					this._DateOfVerification = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Depreciated", DbType="VarChar(50)")]
		public string Depreciated
		{
			get
			{
				return this._Depreciated;
			}
			set
			{
				if ((this._Depreciated != value))
				{
					this._Depreciated = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetBookValue", DbType="VarChar(50)")]
		public string NetBookValue
		{
			get
			{
				return this._NetBookValue;
			}
			set
			{
				if ((this._NetBookValue != value))
				{
					this._NetBookValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateofPurchase", DbType="Date")]
		public System.Nullable<System.DateTime> DateofPurchase
		{
			get
			{
				return this._DateofPurchase;
			}
			set
			{
				if ((this._DateofPurchase != value))
				{
					this._DateofPurchase = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="VarChar(200)")]
		public string UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this._UnitPrice = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
